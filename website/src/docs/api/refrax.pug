---
title: Refrax
permalink: /docs/api/refrax.html
group: 1
layout: docs.pug
---
include /mixins/doc_templates.pug

p `RefraxAction` is a mechanism to functionally represent a mutation to be performed on data.

p Refrax actions are created using <a href="/docs/api/refrax.html#createAction">Refrax.createAction</a>.

h2.header-section Overview

h3.header-section-sub Properties

ul.list-properties
  li
    a(href="/docs/api/refrax-config.html")
      span.anchor-link(href="#"+slug name=slug aria-hidden="true")
        span.fa.fa-link
      pre
        span Config
  li
    a(href="/docs/api/refrax-mutable-resource.html")
      span.anchor-link(href="#"+slug name=slug aria-hidden="true")
        span.fa.fa-link
      pre
        span MutableResource
        i.fa.fa-long-arrow-right(aria-hidden="true")
  li
    a(href="/docs/api/refrax-resource.html")
      span.anchor-link(href="#"+slug name=slug aria-hidden="true")
        span.fa.fa-link
      pre
        span Resource
        i.fa.fa-long-arrow-right(aria-hidden="true")
  li
    a(href="/docs/api/refrax-schema-path.html")
      span.anchor-link(href="#"+slug name=slug aria-hidden="true")
        span.fa.fa-link
      pre
        span Schema
        i.fa.fa-long-arrow-right(aria-hidden="true")
      Root SchemaPath
  li
    a(href="/docs/api/refrax-store.html")
      span.anchor-link(href="#"+slug name=slug aria-hidden="true")
        span.fa.fa-link
      pre
        span Store
        i.fa.fa-long-arrow-right(aria-hidden="true")

h3.header-section-sub Methods

ul.list-methods
  li
    a(href="#static-createaction")
      pre.prism.language-javascript.inline
        code static createAction(method)
      Create an Action wrapper around a given method.
  li
    a(href="#static-defineschemacollection")
      pre.prism.language-javascript.inline
        code static defineSchemaCollection(path[, store][, options])
  li
    a(href="#static-defineschemaresource")
      pre.prism.language-javascript.inline
        code static defineSchemaResource(path[, store][, options])
  li
    a(href="#static-defineschemanamespace")
      pre.prism.language-javascript.inline
        code static defineSchemaNamespace(path[, options])
  li
    a(href="#static-processresponse")
      pre.prism.language-javascript.inline
        code static processResponse(data, resourceDescriptor[, handler])

h2.header-section Methods

dl.method-definitions
  +method_header("createAction(method)", "static")
  dd.method-definition-details
    p Create an !{generate_resource_link("+action")} wrapper around a given method that provides mutability, publish and subscribe tools.
    
    aside
      h4 Parameters
      dl.identifier-list.method-arguments
        dt.method-argument
          dfn.identifier method
          span.tag.tag-type
            != generate_resource_link(":function")
        dd.method-argument-details
          | The function to call upon invocation of the !{generate_resource_link("+action")} binded to an internal action context.
    aside
      h4 Returns
      table.detail-table-parameters
        thead
          tr
            th Type
            th Description
        tbody
          tr
            td!= generate_resource_link(":action")
            td The action wrapping supplied method.
            
  +method_header("defineSchemaCollection(path[, store][, options])", "static")
  dd.method-definition-details
    p Create an [:action]() wrapper around a given method.
    
    aside
      h4 Parameters
      dl.identifier-list.method-arguments
        dt.method-argument
          dfn.identifier path
          span.tag.tag-type
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
        dt.method-argument
          dfn.identifier store
          span.tag.tag-optional optional
          span.tag.tag-type
            != generate_resource_link(":store")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
        dt.method-argument
          dfn.identifier options
          span.tag.tag-optional optional
          span.tag.tag-type
            != generate_resource_link(":object")
        dd.method-argument-details
          p Definition configuration options for the collection. See properties below for specifications.
          table.detail-table-parameters
            thead
              tr
                th Property
                th Type
                th Description
            tbody
              tr
                td
                  span.identifier identifier
                  span.tag.tag-optional optional
                td.type!= generate_resource_link(":string")
                td The identifier to be used in the walking of a !{generate_resource_link("+schema_path")} as well as the base for the default <code>paramId</code> generation.
              tr
                td
                  span.identifier collection
                  span.tag.tag-optional optional
                td.type!= generate_resource_link(":object")
                td
                  p Configuration options for the collection specific node path.
                  table.detail-table-parameters
                    thead
                      tr
                        th Property
                        th Type
                        th Description
                    tbody
                      tr
                        td.identifier partial
                        td.type!= generate_resource_link(":string")
                        td The screen point corresponding to the given map point.
                      tr
                        td.identifier uri
                        td.type!= generate_resource_link(":object")
                        td The screen point corresponding to the given map point.
              tr
                td
                  span.identifier member
                  span.tag.tag-optional optional
                td!= generate_resource_link(":object")
                td
                  p Configuration options for the member specific node path.
                  table.detail-table-parameters
                    thead
                      tr
                        th Property
                        th Type
                        th Description
                    tbody
                      tr
                        td.identifier partial
                        td.type!= generate_resource_link(":string")
                        td The screen point corresponding to the given map point.
                      tr
                        td.identifier uri
                        td.type!= generate_resource_link(":object")
                        td The screen point corresponding to the given map point.
                      tr
                        td.identifier fragments
                        td.type!= generate_resource_link(":object")
                        td The screen point corresponding to the given map point.
                      tr
                        td.identifier paramId
                        td.type!= generate_resource_link(":object")
                        td The screen point corresponding to the given map point.
    aside
      h4 Returns
      table.detail-table-parameters
        thead
          tr
            th Type
            th Description
        tbody
          tr
            td <a href="esri-geometry-ScreenPoint.html">ScreenPoint</a>
            td The screen point corresponding to the given map point.
      
  +method_header("defineSchemaResource(path[, store][, options])", "static")
  dd.method-definition-details
    p Create an [:action]() wrapper around a given method.
    
    aside
      h4 Parameters
      dl.identifier-list.method-arguments
        dt.method-argument
          dfn.parameter-name path
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
        dt.method-argument
          dfn.parameter-name store
          span.tag.tag-optional optional
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
    aside
      h4 Returns
      p Returns [:action]().
      
  +method_header("defineSchemaNamespace(path[, options])", "static")
  dd.method-definition-details
    p Create an [:action]() wrapper around a given method.
    
    aside
      h4 Parameters
      dl.identifier-list.method-arguments
        dt.method-argument
          dfn.parameter-name path
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
        dt.method-argument
          dfn.parameter-name store
          span.tag.tag-optional optional
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
    aside
      h4 Returns
      p Returns [:action]().

  +method_header("processResponse(data[, resourceDescriptor][, handler])")
  dd.method-definition-details
    p Create an [:action]() wrapper around a given method.
    
    aside
      h4 Parameters
      dl.identifier-list.method-arguments
        dt.method-argument
          dfn.parameter-name path
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
        dt.method-argument
          dfn.parameter-name store
          span.tag.tag-optional optional
          span.tag.tag-parameter
            != generate_resource_link(":function")
        dd.method-argument-details
          p The function to call upon action invocation with local context to an <code>ActionInvoker</code>
    aside
      h4 Returns
      p Returns [:action]().
